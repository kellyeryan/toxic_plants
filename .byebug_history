exit
plant_array
exit
plant_array
exit
hash[url["href"]] = index
hash
url
exit
find_url.each_with_index { |url, index| hash[url] = index }
exit
l, nil, nil, nil, nil]
find_url.each_with_index { |url, index| puts url[4..31] } 
find_url.each_with_index { |url, index| puts [4..31] }
find_url.each_with_index { |url, index| puts index[4..31] }
find_url.each_with_index { |url, index| puts index[4..31]
find_url.map { |url| puts url["href"] }
find_url.detect { |url| puts url["href"] }
exit
find_url.detect { |url| puts url }
exit
parsed_page.css("span").css("a").map(&:attributes["href"])
find_url_2.detect { |url| puts url}
exit
find_url.map(&:attributes["href"])
find_url.map(&:attributes["href"].children
find_url.map(&:attributes["href"].children)
find_url.map(&:attributes["href"].text)
find_url.map(&:attributes["href"].text0
find_url.map(&:attributes["href"].value)
find_url.map(&:attributes["href"])
find_url.map(&:attributes["href"].value)
find_url.map(&:attributes[
find_url.map(&:attributes["href"].value
find_url[3..6]
find_url[3..6].attributes
find_url[3..6]
find_url[3..6].children
find_url[3..6].attributes
find_url[3..6].attribute
find_url[3..6].attributes["href"]
find_url[3..6].attributes["href"].value
find_url[3..6]
find_url.[4..]
find_url
find_url.find do |url|
find_url.detect do |names|
find_url.detect do |name|
exit
parsed_page.css("span").css("a")
exit
plant_array
exit
plant_array
exit
plant_array
exit
end
exit
plant.text
plant
exit
parsed_page.css("span").css("a")[3].attributes["href"].value
parsed_page.css("span").css("a")[8].attributes["href"].value
parsed_page.css("span").css("a")[7].attributes["href"].value
parsed_page.css("span").css("a")[6].attributes["href"].value
parsed_page.css("span").css("a")[4].attributes["href"].value
parsed_page.css("span").css("a")[5].attributes["href"].value
parsed_page.css("span").css("a")[5]attributes["href"].value
parsed_page.css("span").css("a").attributes["href"].value
parsed_page.css("span").css("a")
parsed_page.css("span").css("a").slice(4, 32).attributes["href"].value
parsed_page.css("span").css("a")[4..32].attributes["href"].value
parsed_page.css("span").css("a")[4...32]parsed_page.css("span").css("a")[4].attributes["href"].value
parsed_page.css("span").css("a")[4].attributes["href"].value
parsed_page.css("span").css("a")[35].attributes["href"].value
parsed_page.css("span").css("a")[33].attributes["href"].value
parsed_page.css("span").css("a")[32].attributes["href"].value
parsed_page.css("span").css("a")[31].attributes["href"].value
parsed_page.css("span").css("a")[120].attributes["href"].value
parsed_page.css("span").css("a")[25].attributes["href"].value
parsed_page.css("span").css("a")[6].attributes["href"].value
parsed_page.css("span").css("a")[0].attributes["href"].value
exit
exti
plant_names.children.text
plant_names.children
plant_names
exit
parsed_page.css("span").css("a")[2].attributes["href"].value
parsed_page.css("span").css("a")[1].attributes["href"].value
parsed_page.css("span").css("a")[0].attributes["href"].value
parsed_page.css("span").css("a").attributes["href"].value
parsed_page.css("span").css("a")[0].attributes["href"].value
parsed_page.css("span").css("a")[0].attributes["href"]
parsed_page.css("span").css("a").attributes["href"]
parsed_page.css("span").css("a")[0].attributes("href")
parsed_page.css("span").css("a.href")
parsed_page.css("span").css("a").css("value")
parsed_page.css("span").css("a").css("name")
parsed_page.css("span").css("a")
parsed_page.css("div").css("span")
parsed_page.css("span")
parsed_page.css("span.a")
plant_names.css("a")
plant_names.children
plant_names.text.include?("Achira")
plant_names.children.text
plant_names.children
plant_names
plant_names.text
plant_names.text.to_a
name.count
name
exit
plant_names
plant_names.to_a
plant_names.text
plant_names.first.text
plant_names.text.first
plant_names.text
plant_names.css("div.plant-title-name").first.text
plant_names.css("div.plant-title-name").first
plant_names.css("div.plant-title-name")
plant_names.css("plant-title-name")
plant.names.css("plant-title-name")
plant_names.count
plant_names = parsed_page.css("div.plant-title-name")
exit
plant_names.count
plant_names = parsed_page.css("div.plant-title-name")
exit
plant_names.count
plant_names = parsed_page.css("div.plant-title-name")
plant_names = parsed_page.css("div.plant-title-names")
plant_names.first
plant_names.count
plant_names = parsed_page.css("div.views-row")
plant_names.count
plant_names = parsed_page.css("div.plant-title-name")
parsed_page.css("div.plant-title-name").first
parsed_page.css("div.plant-title-name")
parsed_page.css("div.inside")
q
parsed_page
q
unparsed_page
url
